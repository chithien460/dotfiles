#!/usr/bin/env bash

set -e

CONFIG_SUFFIX=".install.conf.yaml"
DOTBOT_DIR="dotbot"

DOTBOT_BIN="bin/dotbot"
BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# setup Git parameters
#GIT_USERNAME=${GIT_USERNAME:-${1:-""}}
#GIT_PASSWORD=${GIT_PASWORD:-${2:-""}}
#GIT_EMAIL=${GIT_EMAIL:-${3:-""}}

_dotbot_pkg_install() {
	if [ ! -s "${HOME}/.dotfiles" ]; then
        cd "${BASEDIR}" || exit 1
        sudo \
            "${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" \
            -q \
            -d "${BASEDIR}" \
            -p "${BASEDIR}/dotbot/apt.py" \
            -c "${PKG_CONFIG}"
        cd - || exit 1
    else
        _done "${PKG_CONFIG} already done"
    fi
}

_dotbot_do_links() {
	cd "${BASEDIR}"
	git -C "${DOTBOT_DIR}" submodule sync --quiet --recursive
	git submodule update --init --recursive "${DOTBOT_DIR}"

	# OS additions.
	if [[ $OSTYPE == 'linux-gnu' ]]; then
		"${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASEDIR}" -c "ubuntu${CONFIG_SUFFIX}"
	elif [[ $OSTYPE == 'linux-android' ]]; then
		"${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASEDIR}" -c "ubuntu${CONFIG_SUFFIX}"
	elif [[ $OSTYPE == darwin* ]]; then
		"${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASEDIR}" -c "macos${CONFIG_SUFFIX}"
	fi
	set +e

	# old command - not select OS
	#"${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASEDIR}" -c "${CONFIG}" "${@}"
}

_configure_nvim() {
	if [ ! -f ~/.vim/autoload/plug.vim ]; then
		aria2c \
			-d ~/.vim/autoload \
			-o plug.vim \
			https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

		local goenv pyenv nodenv jenv new_path old_path

		goenv=$(_env_binary "goenv")
		pyenv=$(_env_binary "pyenv")
		nodenv=$(_env_binary "nodenv")
		jenv=$(_env_binary "jenv")

		old_path="${PATH}"
		new_path="${PATH}:$($goenv root)/shims:$($pyenv root)/shims:$($nodenv root)/shims:$($jenv root)/shims"

		export PATH="${new_path}"
		nvim --headless +PlugInstall +qall!
		nvim --headless +UpdateRemotePlugins +qall!
		export PATH="${old_path}"

		unset goenv
		unset pyenv
		unset nodenv
		unset jenv
		unset new_path
	else
		_done "neovim -> $(nvim --version | head -n1 | awk '{print $2}')" "[  ]"
	fi
}

_done() {
    local icon
    icon="${2:-"[  ]"}"
    printf "\\r  \\033[00;40m${icon} %s\\n" "${1}"
}

_hello_dude() {
    if command -v lsb_release >/dev/null 2>&1; then
        distro_name=$(lsb_release -sd 2>&1)
    else
        distro_name="Unknown"
    fi

    if [ ! -s "${HOME}/.dotfiles" ]; then
        first_run_welcome="tecix/dotfiles - first run"
    else
        first_run_welcome="tecix/dotfiles - updating"
    fi
    _done "$OSTYPE : ${distro_name} : ${first_run_welcome}"
}

_install_dependencies() {
	sudo apt-get install \
		git \
		python3 python3-apt \
		-y -qq --no-install-recommends \
		>/dev/null
}


_init_submodules() {
	git submodule sync --recursive >/dev/null
	git submodule update \
		--recursive --init \
		--checkout --no-recommend-shallow --force \
		--jobs 4 \
		--progress \
		>/dev/null
	}

_hello_dude
#_install_dependencies
_init_submodules
_dotbot_do_links
_configure_nvim
